// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionArchitecture.Persistence.Contexts;

#nullable disable

namespace OnionArchitecture.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230804105946_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("PasswordStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1996, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(5054),
                            Email = "BuludluMoka@gmail.com",
                            FirstName = "Moka",
                            Gender = true,
                            LastName = "Buludlu",
                            Password = "Moka",
                            PasswordStatus = true,
                            Phone = "0502420288",
                            Status = true,
                            UpdatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(5063),
                            Username = "Moka"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.CardLang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CardLangs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            Status = true,
                            Type = "SpeCode",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Aktiv"
                        },
                        new
                        {
                            Id = 2,
                            CardId = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            Status = true,
                            Type = "SpeCode",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Deaktiv"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DocType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("DownloadKey")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("FileUpload");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.FileUploadSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SizeInMegabyte")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FileUploadSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentType = "text/plain",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6673),
                            Extension = ".txt",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ContentType = "application/pdf",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6677),
                            Extension = ".pdf",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ContentType = "application/vnd.ms-word",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6679),
                            Extension = ".doc",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ContentType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6682),
                            Extension = ".docx",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ContentType = "application/vnd.ms-excel",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6683),
                            Extension = ".xls",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6685),
                            Extension = ".xlsx",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ContentType = "image/png",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6687),
                            Extension = ".png",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ContentType = "image/jpeg",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6688),
                            Extension = ".jpg",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ContentType = "image/jpeg",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6690),
                            Extension = ".jpeg",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            ContentType = "image/gif",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6691),
                            Extension = ".gif",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            ContentType = "text/csv",
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(6692),
                            Extension = ".csv",
                            SizeInMegabyte = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7024),
                            Name = "Azerbaycan",
                            ShortName = "AZ",
                            Status = true,
                            UpdatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7025)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7030),
                            Name = "English",
                            ShortName = "EN",
                            Status = true,
                            UpdatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7031)
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("Code")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = (short)1000,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7236),
                            Definition = "SaveSuccess",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Code = (short)1001,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7239),
                            Definition = "Deleted",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Code = (short)4000,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7240),
                            Definition = "SaveFailure",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Code = (short)4001,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7241),
                            Definition = "BlockedOperation",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Code = (short)4002,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7242),
                            Definition = "NotApproved",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Code = (short)4004,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7243),
                            Definition = "NotFound",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Code = (short)4005,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7245),
                            Definition = "AlreadyApproved",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Code = (short)4006,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7246),
                            Definition = "DataConflict",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Code = (short)4007,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7247),
                            Definition = "AlreadyExists",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Code = (short)4008,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7249),
                            Definition = "CannotBeChanged",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Code = (short)4009,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7251),
                            Definition = "FillRequiredFields",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Code = (short)4010,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7252),
                            Definition = "UnexpectedError",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Code = (short)4011,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7253),
                            Definition = "InvalidRequestParameters",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Code = (short)4012,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7254),
                            Definition = "RateLimitReached",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Code = (short)4013,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7255),
                            Definition = "UserNamePasswordIncorrect",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Code = (short)4014,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7256),
                            Definition = "TokenExpired",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Code = (short)4015,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7258),
                            Definition = "TokenIsInvalid",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Code = (short)4016,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7259),
                            Definition = "Unauthorized",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Code = (short)4017,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7260),
                            Definition = "ConfirmPasswordError",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Code = (short)4018,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7261),
                            Definition = "UserNotActive",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Code = (short)4019,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7262),
                            Definition = "UserNameAlreadyExists",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Code = (short)4020,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7263),
                            Definition = "EmailAlreadyExists",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Code = (short)4021,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7264),
                            Definition = "AccountLocked",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Code = (short)4022,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7265),
                            Definition = "PasswordValidation",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Code = (short)4023,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7267),
                            Definition = "OldPasswordError",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            Code = (short)5000,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7268),
                            Definition = "InternalServerError",
                            Note = "",
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.MessageLang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageLangs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7442),
                            LangId = 1,
                            MessageId = 1,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Yadda saxlanıldı."
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7444),
                            LangId = 1,
                            MessageId = 2,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Silindi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7446),
                            LangId = 1,
                            MessageId = 3,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Yadda saxlanılarkən xəta baş verdi."
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7447),
                            LangId = 1,
                            MessageId = 4,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Qadağan olunmuş əməliyyat"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7448),
                            LangId = 1,
                            MessageId = 5,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Təsdiq olunmayıb"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7449),
                            LangId = 1,
                            MessageId = 6,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Məlumat tapılmadı."
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7451),
                            LangId = 1,
                            MessageId = 7,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Artıq təsdiqlənib."
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7452),
                            LangId = 1,
                            MessageId = 8,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Verilmiş məlumatlar uyğun deyil."
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7453),
                            LangId = 1,
                            MessageId = 9,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Daxil etdiyiniz məlumat artıq bazada mövcuddur!"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7454),
                            LangId = 1,
                            MessageId = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Məlumatlar dəyişdirilə bilməz."
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7456),
                            LangId = 1,
                            MessageId = 11,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Ulduzlu bölmələri doldurun."
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7457),
                            LangId = 1,
                            MessageId = 12,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Xəta baş verdi."
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7458),
                            LangId = 1,
                            MessageId = 13,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Göndərilən parametrlər düzgün deyil."
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7459),
                            LangId = 1,
                            MessageId = 14,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Rate Limitə çatıldı."
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7460),
                            LangId = 1,
                            MessageId = 15,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "İstifadəçi adı və ya şifrəsi yanlışdır."
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7461),
                            LangId = 1,
                            MessageId = 16,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Token vaxtı bitib."
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2023, 8, 4, 14, 59, 46, 487, DateTimeKind.Local).AddTicks(7463),
                            LangId = 1,
                            MessageId = 17,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Yanlış token"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 18,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Avtorizasiya xətası"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 19,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Şifrələr eyni deyil!"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 20,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Istifadəçi aktiv deyil!"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 21,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "İstifadəçi adı artıq mövcuddur!"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 22,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Bu mail adresinə bağlı istifədəçi artıq mövcuddur!"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 23,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Hesab kilidləndi"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 24,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Şifrədə min. 6 simvol, böyük-kiçik hərf və bir xüsusi simvol olmalıdır"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 25,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Diqqət! Bu şifrəni artıq istifadə etmisiniz. Zəhmət olmasa yeni şifrə daxil edin"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 1,
                            MessageId = 26,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Server xətası"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 1,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Saved successfully."
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 2,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Deleted"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 3,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Error occurred while saving."
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 4,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Operation forbidden"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 5,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Not confirmed"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 6,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Data not found."
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 7,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Already confirmed."
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 8,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "The provided information is not suitable."
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 9,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "The information you entered already exists in the database!"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Data cannot be modified."
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 11,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Please fill in the starred sections."
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 12,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "An error occurred."
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 13,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "The parameters sent are not correct."
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 14,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Rate limit reached."
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 15,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "The username or password is incorrect."
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 16,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Token has expired."
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 17,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Invalid token"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 18,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Authorization error"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 19,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Passwords are not the same!"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 20,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "User is not active!"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 21,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "The username already exists!"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 22,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "A user already exists with this email address!"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 23,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Account locked"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 24,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Password must contain min. 6 characters, upper-lower case letters and a special character"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 25,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Attention! You've already used this password. Please enter a new password"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 2,
                            MessageId = 26,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Server error"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 1,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Успешно сохранено."
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 2,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Удалено"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 3,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Произошла ошибка при сохранении."
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 4,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Операция запрещена"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 5,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Не подтверждено"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 6,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Данные не найдены."
                        },
                        new
                        {
                            Id = 59,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 7,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Уже подтверждено."
                        },
                        new
                        {
                            Id = 60,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 8,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Предоставленная информация не подходит."
                        },
                        new
                        {
                            Id = 61,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 9,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Введенная вами информация уже существует в базе данных!"
                        },
                        new
                        {
                            Id = 62,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 10,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Данные нельзя изменить."
                        },
                        new
                        {
                            Id = 63,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 11,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Пожалуйста, заполните обязательные поля."
                        },
                        new
                        {
                            Id = 64,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 12,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Произошла ошибка."
                        },
                        new
                        {
                            Id = 65,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 13,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Отправленные параметры некорректны."
                        },
                        new
                        {
                            Id = 66,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 14,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Достигнут лимит скорости."
                        },
                        new
                        {
                            Id = 67,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 15,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Имя пользователя или пароль неверны."
                        },
                        new
                        {
                            Id = 68,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 16,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Срок действия токена истек."
                        },
                        new
                        {
                            Id = 69,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 17,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Неверный токен"
                        },
                        new
                        {
                            Id = 70,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 18,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Ошибка авторизации"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 19,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Пароли не совпадают!"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 20,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Пользователь не активен!"
                        },
                        new
                        {
                            Id = 73,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 21,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Имя пользователя уже существует!"
                        },
                        new
                        {
                            Id = 74,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 22,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Пользователь уже существует с этим адресом электронной почты!"
                        },
                        new
                        {
                            Id = 75,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 23,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Аккаунт заблокирован"
                        },
                        new
                        {
                            Id = 76,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 24,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Пароль должен содержать мин. 6 символов, заглавные и строчные буквы и специальный символ"
                        },
                        new
                        {
                            Id = 77,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 25,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Внимание! Вы уже использовали этот пароль. Пожалуйста, введите новый пароль"
                        },
                        new
                        {
                            Id = 78,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LangId = 3,
                            MessageId = 26,
                            Status = true,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Ошибка сервера"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.SpeCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<int>("RefId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SpeCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderBy = 1,
                            RefId = 1,
                            Status = true,
                            Type = "All",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Aktiv"
                        },
                        new
                        {
                            Id = 2,
                            Code = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderBy = 2,
                            RefId = 2,
                            Status = true,
                            Type = "All",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Deaktiv"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.SystemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entities.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("LogOut")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
